importjava.io.BufferedReader;
importjava.io.File;
importjava.io.FileReader;
importjava.io.FileNotFoundException;
importjava.io.IOException;
importjava.text.DateFormat;
importjava.text.ParseException;
importjava.util.ArrayList;
importjava.util.Date;

publicclassCompany2{

privateArrayList<Employee>employees;
privateEmployee[]emps;

publicCompany2(StringemployeeDataFile)throwsFileNotFoundException{
employees=newArrayList<Employee>(10);
emps=newEmployee[10];
loadEmployeesFromFile(newFile(employeeDataFile));
}

publicdoublemonthlyPayroll(){
doublepayroll=0.0;
inti=0;
for(Employeeemployee:employees){
payroll+=employee.monthlyPay();
System.out.println(emps[i].monthlyPay());
i++;
}
returnpayroll;
}

publicStringtoString(){
Stringret="";
for(Employeeemployee:employees){
ret+=employee+"\n";
}
returnret;
}

privatevoidloadEmployeesFromFile(FileempData)
throwsFileNotFoundException{
BufferedReaderreader=newBufferedReader(newFileReader(empData));
intlineNumber=1;
try{
Stringline=reader.readLine();
while(line!=null){
try{
String[]fields=line.split(";");
if(fields[0].trim().equalsIgnoreCase("Salaried")){
employees.add(makeSalariedEmployee(fields));
emps[lineNumber-1]=makeSalariedEmployee(fields);
}else{
employees.add(makeHourlyEmployee(fields));
emps[lineNumber-1]=makeHourlyEmployee(fields);
}
}catch(ParseExceptione){
Stringmsg="Malformeddataatline"+lineNumber
+",causedby"+e.getMessage();
System.out.println(msg);
System.out.println("Fullstacktrace:");
e.printStackTrace(System.out);
System.exit(0);
}
line=reader.readLine();
lineNumber++;
}
}catch(IOExceptione){
Stringmsg="Unabletoreadline"+lineNumber
+",causedby"+e.getMessage();
System.out.println(msg);
System.out.println("Fullstacktrace:");
e.printStackTrace(System.out);
System.exit(0);
}
}

privateSalariedEmployeemakeSalariedEmployee(String[]fields)
throwsParseException{
Stringname=fields[1].trim();
DatehireDate=DateFormat.getDateInstance().parse(fields[2].trim());
doubleannualSalary=Double.parseDouble(fields[3].trim());
returnnewSalariedEmployee(name,hireDate,annualSalary);
}

privateHourlyEmployeemakeHourlyEmployee(String[]fields)
throwsParseException{
Stringname=fields[1].trim();
DatehireDate=DateFormat.getDateInstance().parse(fields[2].trim());
doublehourlyWage=Double.parseDouble(fields[3].trim());
doublemonthlyHours=Double.parseDouble(fields[4].trim());
returnnewHourlyEmployee(name,hireDate,hourlyWage,monthlyHours);
}

publicstaticvoidmain(String[]args)throwsFileNotFoundException{
Company2c=newCompany2("employees.data");
System.out.println(c);
System.out.printf("Monthlypayroll:%.2f",c.monthlyPayroll());
}
}
