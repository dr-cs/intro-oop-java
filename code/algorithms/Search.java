importjava.util.*;

publicclassSearch{

publicstaticbooleanlinearSearch(int[]array,intvalue){
for(intelement:array){
if(element==value){
returntrue;
}
}
returnfalse;
}

publicstaticintbinarySearchLoop(int[]array,intqueryValue){
intlo=0,hi=array.length-1;
while(lo<=hi){
intmiddle=(lo+hi)/2;
if(array[middle]==queryValue){
returnmiddle;
}
if(array[middle]>queryValue){
hi=middle-1;
}else{
lo=middle+1;
}
}
return-1;
}

publicstaticintbinarySearch(int[]array,intqueryValue){
returnbsHelper(array,queryValue,0,array.length-1);
}

privatestaticintbsHelper(int[]array,intqueryValue,intlo,inthi){
if(lo>hi){
return-1;
}
intmiddle=(lo+hi)/2;
if(queryValue==array[middle]){
returnmiddle;
}elseif(queryValue>array[middle]){
returnbsHelper(array,queryValue,middle+1,hi);
}else{
returnbsHelper(array,queryValue,lo,middle-1);
}
}

publicstatic<T>intbinarySearch(T[]array,TqueryValue,
Comparator<?superT>c){
intlo=0,hi=array.length-1;
while(lo<=hi){
intmiddle=(lo+hi)/2;
if(c.compare(array[middle],queryValue)==0){
returnmiddle;
}
if(c.compare(array[middle],queryValue)>0){
hi=middle-1;
}else{
lo=middle+1;
}
}
return-1;
}

publicstaticvoidmain(String[]args){
int[]ints={4,7,5,6,3,9,2,1,8};
System.out.println(Arrays.toString(ints));
Arrays.sort(ints);
System.out.println(Arrays.toString(ints));
//Whentesting,testtheedgecases
System.out.println("Whereis4?"+binarySearchLoop(ints,4));
System.out.println("Whereis8?"+binarySearchLoop(ints,8));
System.out.println("Whereis5?"+binarySearchLoop(ints,5));
System.out.println("NowwithrecursivebinarySearch:");
System.out.println("Whereis4?"+binarySearch(ints,4));
System.out.println("Whereis8?"+binarySearch(ints,8));
System.out.println("Whereis5?"+binarySearch(ints,5));

GtStudent[]gtStuds={
newGtStudent("VonNeumann",Major.CMPE),
newGtStudent("Sakaguchi",Major.CM),
newGtStudent("Turing",Major.CS),
newGtStudent("Bernoulli",Major.AE),
newGtStudent("Maxwell",Major.EE),
newGtStudent("Church",Major.CS),
newGtStudent("Wright",Major.ARCH),
newGtStudent("Sandiego",Major.IE)
};
System.out.println("Unsortedstuds:"+Arrays.toString(gtStuds));
Comparator<GtStudent>studComparator=newComparator<GtStudent>(){
publicintcompare(GtStudenta,GtStudentb){
if(!a.getMajor().equals(b.getMajor())){
returna.getMajor().compareTo(b.getMajor());
}else{
returna.getName().compareTo(b.getName());
}
}
};
Arrays.sort(gtStuds,studComparator);
System.out.println("Sortedstuds:"+Arrays.toString(gtStuds));
GtStudentsandiego=newGtStudent("Sandiego",Major.IE);
System.out.println("WhereisSandiego:"
+binarySearch(gtStuds,sandiego,studComparator));
}
}
